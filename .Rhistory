installed.packages()
install.package("psych")
install.packages("psych")
install.packages("tidyverse")
install.packages("lubridate")
install.packages("gt")
install.packages("tinytex")
install.packages("huxtable")
install.packages("officer")
install.packages("lsr")
install.packages("readxl")
library(readxl)
library(tidyverse)
# wykonajmy kilka poleceń, wysyłając je na konsolę
# pojedynczo
2 + 2
# w bloku
2 * 7
# w bloku
2 * 7
8 + 90
# możemy też wybierać fragment linii do wysłania na konsolę
3 * 67 - 52
3 * 67
67 - 52
7 - 52
25 * 65 + 98
1 + 2 + 3 + 4 *
5
1 + 2 + 3 + 4 *
5
1 + 2 + 3 + 4 *
5
((7 + 8) * 6 - 12) / 2 # komentarz  7*67
(504 - 87 + sqrt(16)) / (64 + 32 - 87 * abs(5 - 9^2))
sqrt(16)
sqrt(-4)
wektor <- c(1,2,3)
print(wektor)
wektor
kostka <- c(2,4,6,2,5,1,2,1,4,6)
moneta <- c(1,0,1,0,1,0,1,0,1,0)
wektor2 = c(1,2,3)
kostka2 = c(1,4,3,5,5,6,1,2,2,6)
moneta2 = c(1,0,1,0,1,0,1,0,1,0)
wektor <- c(1,2,3,4,5)
print(wektor)
kostka
mean(x = wektor)
mean(x <- wektor)
mean(x = kostka)
srednia1 <- mean(x = kostka)
srednia2 <- mean(x = kostka2)
srednia_srednich <- mean(x = (srednia1 + srednia2))
srednia_srednich
srednia1 <- mean(x = kostka)
srednia2 <- mean(x = kostka2)
srednia1
srednia2
srednia_srednich <- mean(srednia1 + srednia2)
srednia_srednich
srednia_srednich <- mean(x = (srednia1, srednia2))
srednia_srednich <- mean(x = (srednia1 srednia2))
srednia_srednich <- mean(srednia1, srednia2)
srednia_srednich
srednia_srednich <- mean(x = srednia1, srednia2)
srednia_srednich
srednia_srednich <- mean(x = srednia1, x = srednia2)
srednia_srednich <- mean(srednia1&srednia2)
srednia_srednich
srednia_srednich <- mean(x = srednia1, srednia2)
srednia_srednich
srednia_srednich <- mean(x = (srednia1, srednia2))
srednia_srednich
srednia_srednich <- mean(x = srednia1 + srednia2)
srednia_srednich
srednia_srednich <- mean(x = "srednia1", "srednia2")
srednia_srednich <- mean(x = "srednia1" "srednia2")
srednia_srednich <- mean(x = ("srednia1", "srednia2")
srednia_srednich <- mean(x = ("srednia1" "srednia2")
srednia_srednich <- mean(x = ("srednia1" + "srednia2")
srednia_srednich <- mean(x = kostka + kostka2)
srednia_srednich <- mean(x = kostka + kostka2)
srednia_srednich
srednia_srednich <- mean(x = c(srednia1, srednia2))
srednia_srednich
srednia_calosci <- mean(x = c(kostka, kostka2))
srednia_calosci
sd(x = srednia_srednich)
sd(x = srednia_calosci)
kostka <- c(2,4,6,2,5,1,2,1,4,6,4,3,5,5,1,2,2,2)
srednia1 <- mean(x = kostka)
srednia2 <- mean(x = kostka2)
srednia1
srednia2
srednia_srednich <- mean(x = c(srednia1, srednia2))
srednia_srednich
srednia_calosci <- mean(x = c(kostka, kostka2))
srednia_calosci
kostka2 = c(1,4,3,5,5,6,1,2,2,6,5,6,5,4,3,3,3,3,3,3)
kostka2 = c(1,4,3,5,5,6,1,2,2,6,5,6,5,4,3,3,3,3)
srednia1 <- mean(x = kostka)
srednia2 <- mean(x = kostka2)
srednia1
srednia2
srednia_srednich <- mean(x = c(srednia1, srednia2))
srednia_srednich
srednia_calosci <- mean(x = c(kostka, kostka2))
srednia_calosci
kostka2 = c(1,4,3,5,5,6,1,2,2,6,5,6,5,4,3,3,3)
srednia1 <- mean(x = kostka)
srednia2 <- mean(x = kostka2)
srednia1
srednia2
srednia_srednich <- mean(x = c(srednia1, srednia2))
srednia_srednich
srednia_calosci <- mean(x = c(kostka, kostka2))
srednia_calosci
sd(x = c=(srednia_srednich)
sd(x = srednia_srednich)
typeof(c(1,2,3))
typeof(c(1.1,2,3))
typeof(c(1,2,3))
typeof(c("a", "b"))
typeof(c(a, b))
typeof(c(TRUE, FALSE, TRUE))
typeof(c(TRUE, FALSE, T))
typeof(c(T, F, T))
typeof(c("T", "F", "T"))
typeof(c("T", F, T))
typeof(c(T, "F", T))
typeof(c(F, "michal", F, T))
# dla wektorów
x1 <- c(30,40,60)
x2 <- c(T, T, F, T)
x3 <- c("0", "1", "1", "0")
x4 <- c("1", F, F, 2)
x4
x1
x3
as.numeric(x3)
as.numeric(x1)
as.character(x1)
as.logical(x1)
as.numeric(x1)
as.logical(x1)
as.logical(x4)
x1[2]
x1[c(T, F, T)]
indeks <- c(3,4)
x4[indeks]
indeks <- c(1,2,4)
x3[indeks]
indeks <- c(2,2,2,2,2)
x1[indeks]
grupa <- c(1,2,2,2,2,3,1,2,3,3,3,3,3,1,1,1,3,3,1,3,1,3,2,2,1,3,1,2,1,2,1,2,2,1,1,3,1,2,3)
czlonkowie <- etykiety[grupa]
etykiety <- c("ojciec", "dziecko", "matka")
czlonkowie <- etykiety[grupa]
czlonkowie
grupa <- c(1,2,2,2,2,3,1,2,3,3,3,3,3,1,1,1,3,3,1,3,1,3,2,2,1,3,1,2,1,2,1,2,2,1,1,3,1,2,3,1,2,2,2,2,3,1,2,3,3,3,3,3,1,1,1,3,3,1,3,1,3,2,2,1,3,1,2,1,2,1,2,2,1,1,3,1,2,3,1,2,2,2,2,3,1,2,3,3,3,3,3,1,1,1,3,3,1,3,1,3,2,2,1,3,1,2,1,2,1,2,2,1,1,3,1,2,3,1,2,2,2,2,3,1,2,3,3,3,3,3,1,1,1,3,3,1,3,1,3,2,2,1,3,1,2,1,2,1,2,2,1,1,3,1,2,3)
etykiety <- c("ojciec", "dziecko", "matka")
czlonkowie <- etykiety[grupa]
czlonkowie
runif(5, min = 0, max = 45)
runif(10)
runif(10)
set.seed(23)
runif(10)
set.seed(23)
runif(10)
set.seed(23)
runif(3)
runif(3)
runif(4)
wygenerowane <- (set.seed(1011), runif(100))
wygenerowane <- (set.seed(1011) runif(100))
set.seed(1011)
wygenerowane <- runif(100)
wygenerowane
hist(wygenerowane)
set.seed(1011)
wygenerowane1 <- runif(1000)
hist(wygenerowane1)
set.seed(1011)
wygenerowane2 <- runif(10000)
hist(wygenerowane2)
set.seed(1011)
wygenerowane3 <- runif(100000)
hist(wygenerowane3)
set.seed(1011)
rnorm(1000)
set.seed(1011)
normalny <- rnorm(1000)
hist(normalny)
set.seed(1011)
bi <- rbinom(1000)
set.seed(1011)
bi <- rbinom(1000, 10)
set.seed(1011)
bi <- rbinom(1000, 10, 0.1)
hist(bi)
set.seed(1011)
tr <- rt(1000)
set.seed(1011)
tr <- rt(1000, 2)
hist(tr)
set.seed(1011)
tr <- rt(1000, 5)
hist(tr)
set.seed(1011)
tr <- rt(1000, 100)
hist(tr)
set.seed(1011)
tr <- rt(1000, 10000)
hist(tr)
set.seed(1011)
pois <- rpois(1000, 40)
hist(pois)
set.seed(1011)
bi <- rbinom(1000, 10, 0.1)
hist(bi)
set.seed(1011)
bi <- rbinom(1000, 1, 0.1)
hist(bi)
set.seed(1011)
bi <- rbinom(1000, 2, 0.1)
hist(bi)
set.seed(1011)
bi <- rbinom(1000, 3, 0.1)
hist(bi)
set.seed(1011)
tr <- rt(1000, 10)
hist(tr)
set.seed(1011)
tr <- rt(1000, 100)
hist(tr)
set.seed(1011)
tr <- rt(1000, 1000)
hist(tr)
set.seed(1011)
tr <- rt(1000, 100000)
hist(tr)
set.seed(1011)
tr <- rt(1000, 100000000)
hist(tr)
set.seed(1011)
tr <- rt(1000, 1)
hist(tr)
x <- seq(from = -5, to = 5, by = 0.1)
x <- seq(from = -5, to = 5, by = (5-(-5)/100))
x <- seq(from = -5, to = 5, by = ((5-(-5))/100))
y <- ((x+3)^2*(x-1)^3*(x-4))
z <- runif(100)
z <- runif(101)
plot(x,y)
plot(x,z)
plot(x,y)
plot(x, y,
type="l"
)
set.seed(22)
z <- runif(101)
plot(x, y,
type="l",
col="red",
lwd=3)
plot(x, y,
type="l",
col="red",
lwd=3,
axis(side=1, at=seq(-5, 5, by=0.5)))
plot(x, y,
type="l",
col="red",
lwd=3,
axis(at=seq(-5, 5, by=0.5)))
plot(x, y,
type="l",
col="red",
lwd=3,
axis(side=0.5, at=seq(-5, 5, by=0.5)))
plot(x, y,
type="l",
col="red",
lwd=3,
axis(side=1, at=seq(-5, 5, by=0.5)))
plot(x, y,
type="l",
col="red",
lwd=3,
axis(side=1, at=seq(from=-5, to=5, by=0.5)))
plot(x, y,
type="l",
col="red",
lwd=3,
axis(side=1, at=seq(from=-5, to=4.5, by=0.5)))
plot(x, y,
type="l",
col="red",
lwd=3,
axis(side=1, at=seq(from=-5, to=4.5, by=0.5)))
plot(x, y,
type="l",
col="red",
lwd=3,
axis(side=1, at=c(-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5)))
plot(x, y,
type="l",
col="red",
lwd=3,
axis(side=1, at=x))
plot(x, y,
type="l",
col="red",
lwd=3)
a <- seq(-1, 2, by=((2-(-1))/100))
b <- (1/(a-1)^2)
plot(a,b)
b
hist(z)
plot(a,b, type="l"
)
hist(z, xlim=20)
hist(z, breaks=20)
hist(z, breaks=z)
hist(z, breaks=c(z))
hist(z, breaks=100)
hist(z, breaks=200)
hist(z, breaks=300)
hist(z, breaks=400)
hist(z, breaks=500)
hist(z, breaks=600)
hist(z, breaks=700)
hist(z, breaks=1000)
hist(z, breaks=2000)
hist(z, breaks=3000)
hist(z, breaks=4000)
hist(z, breaks=z)
hist(z, breaks=num(z))
hist(z, breaks=equal)
hist(z, breaks="equal")
hist(z, breaks="fd")
hist(z, breaks="scott")
hist(z, breaks=(z=1))
# Narysować histogram z danego wektora, żeby histogram był płaski
hist(z, nclass=1)
# Narysować histogram z danego wektora, żeby histogram był płaski
hist(z, nclass=12)
# Narysować histogram z danego wektora, żeby histogram był płaski
hist(z, breaks=(101/12)
# Narysować histogram z danego wektora, żeby histogram był płaski
hist(z, breaks=(101/12))
hist(z, breaks=(101/12))
wyn <- 101/2
set.seed(22)
z <- runif(101)
hist(z, breaks=(101/12))
hist(z, nclass=12)
hist(z, nclass=1)
set.seed(123)
rozkl_empir <- runif(1000)
wart <- (c(rozkl_empir) < 0.5)
probability <- sum(wart, na.rm = T)/length(rozkl_empir)
sum(rozkl_empir < 0.5, na.rm = T)
rozkl_empir
sum((rozkl_empir<0.5)=T)
sum((rozkl_empir < 0.5) = T)
sum(rozkl_empir < 0.5)
set.seed(123)
rozkl_empir <- runif(1000)
sum(rozkl_empir < 0.5, na.rm = T)/length(rozkl_empir)
rozkl_empir <- runif(1000, min=-1, max=1)
set.seed(123)
rozkl_empir <- runif(1000, min=-1, max=1)
sum(rozkl_empir < 0.5, na.rm = T)/length(rozkl_empir)
quantile(x = rozkl_empir, probs = c(0.85))
quantile(x = rozkl_empir, probs = c(0.15, 0.85))
quantile(x = rozkl_empir, probs = c(0.25, 0.80))
quantile(x = rozkl_empir, probs = seq(0.1, 0.9, 0.1))
#Mediana
median(rozkl_empir)
punif(q=0.5, min = -1, max = 1)
c <- seq(-2,2,(4/100))
d <- punif(c,-1,1)
plot(c,d,type="l")
qunif(p=0.12, -1,1)
punif(q=-0.76, -1,1)
1/(a-1)^2, if a=0
1/(a-1)^2
max(b)
b
a
hist(z, breaks=c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))
hist(z, breaks=c(1,1))
hist(z, breaks=c(1))
hist(z, breaks=101)
wyn <- 101/12
hist(z, nclass=12,12,12,12,12,12,12)
hist(z, breaks=12,12,12,12,12,12,12)
hist(z, breaks=(range(z)))
hist(z, breaks=(length(z)))
hist(z, freq = TRUE)
hist(z, freq = F)
hist(z, breaks=c(z))
hist(z, breaks=c(z), freq=T)
hist(z, breaks=z, freq=T)
hist(z, breaks=z, freq=T, probability = !freq)
hist(z, breaks=z, freq=T, include.lowest = F)
hist(z, breaks=z, freq=T, right = F)
