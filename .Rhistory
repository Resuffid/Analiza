iris
diamonds
tab02 <- diamonds%>%
group_by(color)%>%
summarise(Q1_x=quantile(x, 0.25), Q3_x=quantile(x,0.75), Q1_y=quantile(y,0.25), Q3_y=quantile(y,0.75))
tab02
tab02 <- diamonds%>%
group_by(color)%>%
summarise(Q1_x=quantile(x, 0.25), Q3_x=quantile(x,0.75), Q1_y=quantile(y,0.25), Q2_y=quantile(y,0.5))
tab02
tab02a <- diamonds%>%
group_by(color)%>%
summarise(Q1_x=quantile(x, 0.25), Q3_x=quantile(x,0.75), Q1_y=quantile(y,0.25), Q2_y=median(y))
tab02a
tab_example <- mtcars %>%
group_by(cyl, gear) %>%
summarise(SD_wt = sd(wt)) %>%
pivot_wider(id_cols = cyl, names_from = gear, values_from = SD_wt)
tab03 <- diamonds%>%
group_by(cut, color)%>%
summarise(M_price=mean(price))%>%
pivot_wider(id_cols = cut, names_from = color, values_from = M_price)
tab03
tab03 <- diamonds%>%
group_by(cut, color)%>%
summarise(M_price=mean(price))%>%
pivot_wider(id_cols = cut, names_from = color, values_from = M_price)%>%
ungroup()
tab03
geom_point()
ggplot(data=iris, mapping = aes(x=Sepal.Length, y=Petal.Width))
ggplot(data=iris, mapping = aes(x=Sepal.Length, y=Petal.Width)) +
geom_point()
ggplot(data=iris, mapping = aes(x=Sepal.Length, y=Petal.Width, color)) +
geom_point()
ggplot(data=iris, mapping = aes(x=Sepal.Length, y=Petal.Width, color=species)) +
geom_point()
ggplot(data=iris, mapping = aes(x=Sepal.Length, y=Petal.Width, color=Species)) +
geom_point()
ggplot(data=iris, mapping = aes(x=Petal.Length, y=Petal.Width, color=Species)) +
geom_point()
ggplot(data=iris, mapping = aes(x=Petal.Length, y=Petal.Width, color=Species)) +
geom_point(alpha=0.3)
ggplot(data=iris, mapping = aes(x=Petal.Length, y=Petal.Width, color=Species)) +
geom_point()
ggplot(data=iris, mapping = aes(x=Petal.Length, y=Petal.Width, color=Species)) +
geom_point() +
labs(x = "długość liścia", y = "szerokość płatka")
ggplot(data=iris, mapping = aes(x=Petal.Length, y=Petal.Width, color=Species)) +
geom_point() +
labs(x = "długość liścia", y = "szerokość płatka", color = "gatunek")
plot04 <- ggplot(data=iris, mapping = aes(x=Petal.Length, y=Petal.Width, color=Species)) +
geom_point() +
labs(x = "długość liścia", y = "szerokość płatka", color = "gatunek")
View(plot04)
ggplot(data=iris, mapping = aes(x=Sepal.Length, y = Sepal.Width)) +
geom_point(alpha=0.7, shape=14)
ggplot(data=iris, mapping = aes(x=Sepal.Length, y = Sepal.Width)) +
geom_point(alpha=0.7, shape=14, size=4)
plot05 <- ggplot(data=iris, mapping = aes(x=Sepal.Length, y = Sepal.Width)) +
geom_point(alpha=0.7, shape=14, size=4)
View(plot05)
diamonds
ggplot(data=diamonds, mapping = aes(x=x, y=price, color=clarity)) +
geom_point()
ggplot(data=diamonds, mapping = aes(x=y, y=price, color=clarity)) +
geom_point()
ggplot(data=diamonds, mapping = aes(x=y, y=price, color=clarity)) +
geom_point() +
labs(x= "wymiar w kierunku przód-tył")
ggplot(data=diamonds, mapping = aes(x=y, y=price, color=clarity)) +
geom_jitter() +
labs(x= "wymiar w kierunku przód-tył")
ggplot(data=diamonds, mapping = aes(x=y, y=price, color=clarity)) +
geom_point() +
labs(x= "wymiar w kierunku przód-tył")
ggplot(data=diamonds, mapping = aes(x=y, y=price, color=clarity)) +
geom_jitter() +
labs(x= "wymiar w kierunku przód-tył")
ggplot(data=diamonds, mapping = aes(x=y, y=price, color=clarity)) +
geom_jitter() +
labs(x= "wymiar w kierunku przód-tył") +
theme_bw()
filter(y!=0 & y<=(median(y)+1.5*(quantile(y,0.75)-quantile(y,0.25))))
diamonds_zad7 <- diamonds%>%
filter(y!=0 & y<=(median(y)+1.5*(quantile(y,0.75)-quantile(y,0.25))))
ggplot(data=diamonds_zad7, mapping = aes(x=y, y=price, color=clarity)) +
geom_jitter() +
labs(x= "wymiar w kierunku przód-tył") +
theme_bw()
ggplot(data=diamonds_zad7, mapping = aes(x=y, y=price, color=clarity)) +
geom_point() +
labs(x= "wymiar w kierunku przód-tył") +
theme_bw()
ggplot(data=diamonds, mapping = aes(x=y, y=price, color=clarity)) +
geom_jitter() +
labs(x= "wymiar w kierunku przód-tył") +
theme_bw()
diamonds_zad7 <- diamonds%>%
filter(y!=0 & y<=(quantile(y,0.75)+1.5*(quantile(y,0.75)-quantile(y,0.25))))
ggplot(data=diamonds_zad7, mapping = aes(x=y, y=price, color=clarity)) +
geom_point() +
labs(x= "wymiar w kierunku przód-tył") +
theme_bw()
diamonds_zad7 <- diamonds%>%
filter(y!=0)%>%
filter(y<=(quantile(y,0.75)+1.5*(quantile(y,0.75)-quantile(y,0.25))))
ggplot(data=diamonds_zad7, mapping = aes(x=y, y=price, color=clarity)) +
geom_point() +
labs(x= "wymiar w kierunku przód-tył") +
theme_bw()
diamonds_zad7 <- diamonds%>%
filter(y!=0 &
y<=(quantile(y,0.75)+1.5*(quantile(y,0.75)-quantile(y,0.25))))
ggplot(data=diamonds_zad7, mapping = aes(x=y, y=price, color=clarity)) +
geom_point() +
labs(x= "wymiar w kierunku przód-tył") +
theme_bw()
diamonds_zad7 <- diamonds%>%
filter(y!=0 &
y<=(quantile(y,0.75)+1.5*(quantile(y,0.75)-quantile(y,0.25))))%>%
ggplot( mapping = aes(x=y, y=price, color=clarity)) +
geom_point() +
labs(x= "wymiar w kierunku przód-tył") +
theme_bw()
diamonds%>%
filter(y!=0 &
y<=(quantile(y,0.75)+1.5*(quantile(y,0.75)-quantile(y,0.25))))%>%
ggplot( mapping = aes(x=y, y=price, color=clarity)) +
geom_point() +
labs(x= "wymiar w kierunku przód-tył") +
theme_bw()
x <- rnorm(300, 56, 3)
yfun <- 0.7*x+2
plot(x,y)
hist(x)
hist(yfun)
plot(x,yfun)
set.seed(666)
x <- rnorm(300, 56, 3)
yfun <- 0.7*x+2
hist(x)
hist(yfun)
plot(x,yfun)
ylos <- yfun + rnorm(300, 0, 1)
plot(x,yfun)
plot(x,ylos)
data.frame(x, yfun, ylos)
data.frame(x, yfun, ylos, y=sum(yfun,ylos))
data.frame(x, yfun, ylos, y=rowSums(yfun,ylos))
data.frame(x, yfun, ylos, y=rowSums(x$yfun,x$ylos))
data.frame(x, yfun, ylos, y=sum(yfun, ylos))
data.frame(x, yfun, ylos, y=sum(yfun, ylos, false))
data.frame(x, yfun, ylos, y=sum(yfun, ylos, FALSE))
data.frame(x, yfun, ylos, y=sum(yfun, ylos, TRUE))
wektory <- data.frame(x, yfun, ylos)
vectors <- mutate(y = rowSums(wektory[2:3]))
library(tidyverse)
vectors <- mutate(y = rowSums(wektory[2:3]))
vectors <- wektory%>%
mutate(y = rowSums(wektory[2:3]))
View(vectors)
data.frame(vectors)
set.seed(100)
X <- rnorm(300, mean = 56, sd = 3)
Yfun <- 0.7*X+2
hist(X)
hist(Yfun)
plot(X,Yfun)
Ylos <- Yfun + rnorm(300, mean = 0, sd = 1)
plot(X,Ylos)
dane <- data.frame("X" = X,
"Yfun" = Yfun,
"Y" = Ylos )
a = 1.1
b = 1
Dane <- Dane %>%
mutate(Yhat = a * X + b)
Dane <- dane %>%
mutate(Yhat = a * X + b)
View(Dane)
ggplot(dane, aes(x=X, y=Yhat)) +
geom_qq()
Dane <- dane %>%
mutate(Yhat = a * X + b)
ggplot(Dane, aes(x=X, y=Yhat)) +
geom_qq()
ggplot(Dane, aes(color=y)) +
geom_qq(aes(x, y))
ggplot(Dane, aes(color=Y)) +
geom_qq(aes(X, Yhat))
plot(Dane$X, Dane$Yhat)
ggplot(Dane, aes(X, Yhat)) +
geom_point(color="red")
Dane <- Dane %>%
mutate(Rozn=Yhat-Y)
View(Dane)
Dane <- Dane %>%
mutate(Rozn=Yhat-Y, RoznSa=Rozn^2)
View(Dane)
ggplot(Dane, aes(x=X, y=Rozn))+
geom_point()+
geom_hline(color="blue", linetype=2)
ggplot(Dane, aes(x=X, y=Rozn))+
geom_point()+
geom_hline(0, color="blue", linetype=2)
ggplot(Dane, aes(x=X, y=Rozn))+
geom_point()+
geom_hline(0, aes(color="blue", linetype=2))
ggplot(Dane, aes(x=X, y=Rozn))+
geom_point()+
geom_hline(aes(0, color="blue", linetype=2))
ggplot(Dane, aes(X, Rozn))+
geom_point()+
geom_hline(aes(0, color="blue", linetype=2))
ggplot(Dane, aes(X, Rozn))+
geom_point()+
geom_hline(aes(0, color="blue", linetype=2))
fit <- lm(formula = Y ~ X, data = dane)
summary(fit)
diamonds
premium <- diamonds%>%
filter(cut = Premium)%>%
select(x)%>%
pull()
ideal <- diamonds%>%
filter(cut == Ideal)%>%
select(x)%>%
pull()
ideal <- diamonds%>%
filter(cut == "Ideal")%>%
select(x)%>%
pull()
premium <- diamonds%>%
filter(cut == "Premium")%>%
select(x)%>%
pull()
hist(ideal)
hist(premium)
hist(ideal)
hist(ideal)
hist(premium)
shapiro.test(premium)
shapiro.test(ideal)
ks.test(premium)
ks.test(premium, pnorm(premium))
ggplot(ideal)+
geom_qq()
ggplot(aes(ideal))+
geom_qq()
plot(ideal)
ggplot(data=ideal)+
geom_qq
data_frame(ideal)
ggplot(data=ideal)+
geom_qq
idealny <- data_frame(ideal)
ggplot(data=idealny)+
geom_qq
View(idealny)
ggplot(data=idealny)+
geom_qq(ideal)
ggplot(data=idealny)+
geom_qq(aes(ideal))
ggplot(data=idealny)+
geom_qq(sample=ideal)
ggplot(data=idealny)+
geom_qq(aes(sample=ideal))
premium1 <- data_frame(premium)
ggplot(data=premium1)+
geom_qq(aes(sample=ideal))
ggplot(data=premium1)+
geom_qq(aes(sample=premium))
var.test(ideal, premium)
t.test(ideal, premium, var.equal = FALSE)
diamenty <- diamonds%>%
filter(cut==premium, color==D|E|H)%>%
select(cut, color)%>%
mutate(N=n())%>%
pull()
diamonds
diamenty <- diamonds%>%
filter(cut=="premium", color=="D"|"E"|"H")%>%
select(cut, color)%>%
mutate(N=n())%>%
pull()
diamenty <- diamonds%>%
filter(cut=="premium", color=="D" | "E" | "H")%>%
select(cut, color)%>%
mutate(N=n())%>%
pull()
diamenty <- diamonds%>%
filter(cut=="premium", color == "D" | "E" | "H")%>%
select(cut, color)%>%
mutate(N=n())%>%
pull()
diamenty <- diamonds%>%
filter(cut=="premium")%>%
filter(color == "D" | "E" | "H")%>%
select(cut, color)%>%
mutate(N=n())%>%
pull()
diamenty <- diamonds%>%
filter(cut=="premium")%>%
filter(color == E" | "H")%>%
diamenty <- diamonds%>%
filter(cut=="premium")%>%
filter(color == "E" | "H")%>%
select(cut, color)%>%
mutate(N=n())%>%
pull()
diamenty <- diamonds%>%
filter(cut=="premium")
View(diamenty)
diamenty <- diamonds%>%
filter(cut=="premium")
diamenty <- diamonds%>%
filter(cut=="Premium")%>%
filter(color == "D" | "E" | "H")%>%
select(cut, color)%>%
mutate(N=n())%>%
pull()
diamenty <- diamonds%>%
filter(cut=="Premium")
diamenty <- diamonds%>%
filter(cut=="Premium")%>%
filter(color == "D" | "E" | "H")
diamenty <- diamonds%>%
filter(cut=="Premium")%>%
select(color == "D" | "E" | "H"
)
diamenty <- diamonds%>%
filter(cut=="Premium")%>%
select(cut, color)%>%
mutate(N=n())
View(diamenty)
diamentyP <- diamonds%>%
filter(cut=="Premium")%>%
group_by(color)
select(color)%>%
mutate(N=n()
)
diamentyP <- diamonds%>%
filter(cut=="Premium")%>%
group_by(color)%>%
select(color)%>%
mutate(N=n())
View(diamentyP)
diamentyP <- diamonds%>%
filter(cut=="Premium")%>%
group_by(color)%>%
select(color)%>%
summarise(N=n())
View(diamentyP)
diamentyP <- diamonds%>%
filter(cut=="Premium")%>%
group_by(color)%>%
select(color)%>%
summarise(N=n())%>%
filter(color=="D")
diamentyP <- diamonds%>%
filter(cut=="Premium")%>%
group_by(color)%>%
select(color)%>%
summarise(N=n())%>%
filter(color=="D"|"E")
diamentyP <- diamonds%>%
filter(cut=="Premium")%>%
group_by(color)%>%
select(color)%>%
summarise(N=n())%>%
filter(color=="D","E","H")
diamentyP <- diamonds%>%
filter(cut=="Premium")%>%
group_by(color)%>%
select(color)%>%
summarise(N=n())%>%
filter(color=="D"|color=="E"|color=="H")
View(diamentyP)
diamentyP <- diamonds%>%
filter(cut=="Premium")%>%
group_by(color)%>%
select(color)%>%
summarise(N=n())%>%
filter(color=="D"|color=="E"|color=="H")%>%
pull()
diamentyG <- diamonds%>%
filter(cut=="Good")%>%
group_by(color)%>%
select(color)%>%
summarise(N=n())%>%
filter(color=="D"|color=="E"|color=="H")%>%
pull()
rm(list = ls())
load(file = "Dane/train.Rda")
View(train)
str(train)
complete.cases(train)
sum(complete.cases(train))
sum(!complete.cases(train))
table(train$x1)
table(train$g)
hist(train$x1)
hist(train$x2)
hist(train$y)
shapiro.test(train$x1)
library(tidyverse)
ggplot(traink, aes(x1, y)) +
geom_point()
ggplot(train, aes(x1, y)) +
geom_point()
ggplot(train, aes(x1, y)) +
geom_point() +
geom_smooth(method="lm", se = FALSE)
geom_point()
ggplot(train, aes(x1, g))+
geom_point()
ggplot(train, aes(x1, g))+
geom_jitter()
ggplot(train, aes(x1, y, color=g)) +
geom_point()
ggplot(train, aes(x1, y, color=g)) +
geom_point() +
geom_smooth(method="lm", se = FALSE)
lm(formula = y ~ x1, data = train)
1.608 * 84 + 918.924
# diagnostyka modelu:
fit.lm.y.x1 <- lm(formula = y ~ x1, data = train)
# elementy szczegółowe
fit.lm.y.x1[["coefficients"]]
fit.lm.y.x1[["residuals"]]
fit.lm.y.x1[["fitted.values"]]
# informacje ogólne:
fit.lm.y.x1
print(fit.lm.y.x1)
summary(fit.lm.y.x1)
train <- train %>%
mutate(res1 = fit.lm.y.x1[["residuals"]],
dop1 = fit.lm.y.x1[["fitted.values"]])
names(train)
ggplot(train, aes(x = res1)) +
geom_density()
shapiro.test(train$res1)
ggplot(train, aes(x = x1, y = y)) +
geom_point() +
geom_smooth(dop1)
ggplot(train, aes(x = x1, y = y)) +
geom_point() +
geom_smooth(train, aes(dop1))
ggplot(train, aes(x = x1, y = y)) +
geom_point() +
geom_smooth(train, aes(x1, dop1))
ggplot(train, aes(x = x1, y = y)) +
geom_point() +
geom_smooth(train, mapping=aes(x1, dop1))
ggplot(train, aes(x = x1, y = y)) +
geom_point() +
geom_line(train, mapping=aes(x1, dop1))
fit.lm.y.x1$coefficients
train <- mutate(train, res2 = y - 1.608 * x1 - 918.924)
var.test(train$res1, train$res2)
ggplot(train, aes(x = x1, y = y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = I("red"))+
geom_hline(yintercept = mean(train$y), size = I(1.5), colour = I("green"))
A = summarise(train, "blad_prosta" = sum(res1^2))
B = summarise(train, "blad_srednia" = sum((y - mean(y))^2))
View(A)
View(B)
train$g
train %>%
group_by(g) %>%
summarise("M" = mean(y))
ggplot(train, aes(x = g, y = y)) +
geom_point()
fit.lm.y.g <- lm(formula = y ~ 1 + g, data = train)
summary(fit.lm.y.g)
ggplot(train, aes(x = as.numeric(g)-1, y = y)) +
geom_point() +
geom_abline(intercept = 1025.025, slope = 11.230)
fit.lm.y.x1.x2 <- lm(formula = y ~ x1 + x2, data = train)
summary(fit.lm.y.x1.x2)
summary(fit.lm.y.x1)
fit.lm.y.x1.x2.1 <- 1.7962*train$x1 + -4.9909*train$x2 + 1005.3099
fit.lm.y.x1.g <- lm(formula = y ~ x1 + g, data = train)
summary(fit.lm.y.x1.g)
fit.lm.y.x1.x2.g <- lm(formula = y ~ x1 + x2 + g, data = train)
summary(fit.lm.y.x1.x2.g)
summary(fit.lm.y.x1.x2)
fit.lm.y.x1.g.x1g <- lm(formula = y ~ x1 + g + x1*g, data = train)
summary(fit.lm.y.x1.g.x1g)
library(psych)
library(tidyverse)
load(file = "./Dane/Baza_z_etykietami.Rda")
str(dane)
dane <- dane%>%
mutate(Wynik_Kw1.1=(Kw1_P1+Kw1_P2+Kw1_P3+Kw1_P4+Kw1_P5+Kw1_P6+Kw1_P7)/7, Wynik_Kw1.2=(Kw1_P8+Kw1_P9+Kw1_P10+Kw1_P11)/4, Wynik_Kw2=(Kw2_P1+Kw2_P2+Kw2_P3+Kw2_P4+Kw2_P5+Kw2_P6+Kw2_P7+Kw2_P8+Kw2_P9+Kw2_P10+Kw2_P11+Kw2_P12/12))
View(dane)
psych::alpha(x = dane %>%
dplyr::select(contains("Kw1")),
check.keys = TRUE)
psych::alpha(x = dane %>%
dplyr::select(contains("Kw1")) %>%
dplyr::select(1:7),
check.keys = TRUE)
psych::alpha(x = dane %>%
dplyr::select(contains("Kw1")) %>%
dplyr::select(-c(1:7)),
check.keys = TRUE)
psych::alpha(x = dane %>%
dplyr::select(contains("Kw2")),
check.keys = TRUE)
